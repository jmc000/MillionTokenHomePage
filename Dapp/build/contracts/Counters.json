{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/marti/Desktop/ESILV/PI\\u00b2/OneMillionDollarProject/Dapp/contracts/annexe/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/marti/Desktop/ESILV/PI\\u00b2/OneMillionDollarProject/Dapp/contracts/annexe/Counters.sol\":{\"keccak256\":\"0xc98a64672faeb6d1ff5d8725f4ecc8f09b4d024a763ecc1e0ca7b18efb56f145\",\"urls\":[\"bzz-raw://8daad11a605ffb1bfb074bb84b0f803c382f8628a82ebcd38d9f393cb40d53da\",\"dweb:/ipfs/QmdyCNCUsUQ7GWnE1vCD9Fn8ruRxXCcq3Pc8vJvMvjLtrD\"]},\"/C/Users/marti/Desktop/ESILV/PI\\u00b2/OneMillionDollarProject/Dapp/contracts/annexe/math/SafeMath.sol\":{\"keccak256\":\"0x063c0b254c81d18ead109db5fda398e35f6847a906f8fafdf13e53333dfd7ca4\",\"urls\":[\"bzz-raw://c6f60c39290732572804eaa098d33840fdc2bafc59c20e9c40af7a7252f71093\",\"dweb:/ipfs/QmSwdBSm7kJWxKoC791ua6BSaRRdck9WCmDuhGv1JYNydG\"]}},\"version\":1}",
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c85dc3c2a0c78111458e0c23ab7b2f579339021a70a84013cb71f43ba729fc164736f6c63430006000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c85dc3c2a0c78111458e0c23ab7b2f579339021a70a84013cb71f43ba729fc164736f6c63430006000033",
  "sourceMap": "643:870:9:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "643:870:9:-:0;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\r\n\r\nimport \"./math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\marti\\Desktop\\ESILV\\PI²\\OneMillionDollarProject\\Dapp\\contracts\\annexe\\Counters.sol",
  "ast": {
    "absolutePath": "/C/Users/marti/Desktop/ESILV/PI²/OneMillionDollarProject/Dapp/contracts/annexe/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2519
      ]
    },
    "id": 2520,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2472,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/C/Users/marti/Desktop/ESILV/PI²/OneMillionDollarProject/Dapp/contracts/annexe/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 2473,
        "nodeType": "ImportDirective",
        "scope": 2520,
        "sourceUnit": 2707,
        "src": "27:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2519,
        "linearizedBaseContracts": [
          2519
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2476,
            "libraryName": {
              "contractScope": null,
              "id": 2474,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2706,
              "src": "673:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2706",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "667:27:9",
            "typeName": {
              "id": 2475,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2479,
            "members": [
              {
                "constant": false,
                "id": 2478,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2479,
                "src": "1045:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2477,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1045:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2519,
            "src": "702:379:9",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "1163:40:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2486,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "1181:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2478,
                    "src": "1181:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2485,
                  "id": 2488,
                  "nodeType": "Return",
                  "src": "1174:21:9"
                }
              ]
            },
            "documentation": null,
            "id": 2490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2490,
                  "src": "1106:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2480,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1106:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1105:25:9"
            },
            "returnParameters": {
              "id": 2485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2490,
                  "src": "1154:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:9:9"
            },
            "scope": 2519,
            "src": "1089:114:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2501,
              "nodeType": "Block",
              "src": "1264:128:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2495,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "1365:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1365:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1383:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1365:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2500,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:19:9"
                }
              ]
            },
            "documentation": null,
            "id": 2502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2502,
                  "src": "1230:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2491,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1230:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1229:25:9"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:9"
            },
            "scope": 2519,
            "src": "1211:181:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2517,
              "nodeType": "Block",
              "src": "1453:57:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2507,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "1464:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1464:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1500:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2510,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2504,
                            "src": "1481:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2478,
                          "src": "1481:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2562,
                        "src": "1481:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1481:21:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1464:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:38:9"
                }
              ]
            },
            "documentation": null,
            "id": 2518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2504,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2518,
                  "src": "1419:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2503,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1419:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1418:25:9"
            },
            "returnParameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:9"
            },
            "scope": 2519,
            "src": "1400:110:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2520,
        "src": "643:870:9"
      }
    ],
    "src": "0:1513:9"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/marti/Desktop/ESILV/PI²/OneMillionDollarProject/Dapp/contracts/annexe/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        2519
      ]
    },
    "id": 2520,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2472,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/C/Users/marti/Desktop/ESILV/PI²/OneMillionDollarProject/Dapp/contracts/annexe/math/SafeMath.sol",
        "file": "./math/SafeMath.sol",
        "id": 2473,
        "nodeType": "ImportDirective",
        "scope": 2520,
        "sourceUnit": 2707,
        "src": "27:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 2519,
        "linearizedBaseContracts": [
          2519
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2476,
            "libraryName": {
              "contractScope": null,
              "id": 2474,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2706,
              "src": "673:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2706",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "667:27:9",
            "typeName": {
              "id": 2475,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 2479,
            "members": [
              {
                "constant": false,
                "id": 2478,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 2479,
                "src": "1045:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2477,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1045:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 2519,
            "src": "702:379:9",
            "visibility": "public"
          },
          {
            "body": {
              "id": 2489,
              "nodeType": "Block",
              "src": "1163:40:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2486,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "1181:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 2487,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2478,
                    "src": "1181:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2485,
                  "id": 2488,
                  "nodeType": "Return",
                  "src": "1174:21:9"
                }
              ]
            },
            "documentation": null,
            "id": 2490,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2490,
                  "src": "1106:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2480,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1106:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1105:25:9"
            },
            "returnParameters": {
              "id": 2485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2490,
                  "src": "1154:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1154:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1153:9:9"
            },
            "scope": 2519,
            "src": "1089:114:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2501,
              "nodeType": "Block",
              "src": "1264:128:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2495,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2492,
                        "src": "1365:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2497,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1365:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1383:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1365:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2500,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:19:9"
                }
              ]
            },
            "documentation": null,
            "id": 2502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2492,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2502,
                  "src": "1230:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2491,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1230:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1229:25:9"
            },
            "returnParameters": {
              "id": 2494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1264:0:9"
            },
            "scope": 2519,
            "src": "1211:181:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2517,
              "nodeType": "Block",
              "src": "1453:57:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2507,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2504,
                        "src": "1464:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 2509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2478,
                      "src": "1464:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1500:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2510,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2504,
                            "src": "1481:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 2511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2478,
                          "src": "1481:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2562,
                        "src": "1481:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1481:21:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1464:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:38:9"
                }
              ]
            },
            "documentation": null,
            "id": 2518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2504,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2518,
                  "src": "1419:23:9",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2503,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2479,
                    "src": "1419:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$2479_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1418:25:9"
            },
            "returnParameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:9"
            },
            "scope": 2519,
            "src": "1400:110:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2520,
        "src": "643:870:9"
      }
    ],
    "src": "0:1513:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-25T13:14:16.618Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}